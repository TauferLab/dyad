name: Compilation Testing for DYAD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile-flux:
    strategy:
      fail-fast: false
      matrix:
        flux: [ 0.52.0, 0.49.0]
        mode: ["FLUX_RPC", "UCX"]
    runs-on: ubuntu-20.04 # Docker-based jobs must run on Ubuntu
    env:
      FLUX_VERSION: ${{ matrix.flux }}
      SPACK_DIR: "/home/runner/work/spack"
      DYAD_INSTALL_PREFIX: "/home/runner/work/dyad/install"
      DYAD_KVS_NAMESPACE: "test"
      DYAD_DTL_MODE: ${{ matrix.mode }}
      DYAD_PATH: "/home/runner/work/dyad/temp/"
    steps:
      - name: Push checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v3
      - name: PR checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends  \
                              gcc g++ gfortran \
                              autoconf \
                              automake \
                              libtool \
                              libtool-bin \
                              openmpi-bin \
                              libopenmpi-dev \
                              libarchive-dev \
                              ncurses-bin \
                              hwloc \
                              lua5.3 liblua5.3-dev \
                              python3 \
                              libczmq-dev \
                              lua-posix-dev \
                              lz4 \
                              pkgconf \
                              libzmq5 \
                              sqlite
          sudo pip install jsonschema cffi ply pyyaml
      - name: Install Spack
        run: |
          git clone https://github.com/spack/spack.git ${SPACK_DIR}
      - name: Load existing dependencies
        run: |
          . ${SPACK_DIR}/share/spack/setup-env.sh
          mkdir -p /home/runner/.spack
          source ${GITHUB_WORKSPACE}/.github/setup/setup_spack.sh
      - name: Compile DYAD
        run: |
          echo "Activating spack"
          . ${SPACK_DIR}/share/spack/setup-env.sh
          echo "Install DYAD"
          cd ${GITHUB_WORKSPACE}
          ls
          pwd
          mkdir build
          cd build
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:${DYAD_INSTALL_PREFIX}/lib/pkgconfig
          CONFIGURE_FLAGS="-DDYAD_CONTROL_PLANE=FLUX_RPC -DDYAD_DATA_PLANE=FLUX_RPC -DDYAD_PROFILER=NONE"
          if [[ $DYAD_DTL_MODE == 'UCX' ]]; then
            CONFIGURE_FLAGS="-DDYAD_CONTROL_PLANE=FLUX_RPC -DDYAD_DATA_PLANE=UCX -DDYAD_PROFILER=NONE"
          fi
          cmake -DCMAKE_INSTALL_PREFIX=${DYAD_INSTALL_PREFIX} ${CONFIGURE_FLAGS} -DENABLE_DYAD_DEBUG=ON ..
          make install -j
      - name: Install PyDYAD
        run: |
          cd ${GITHUB_WORKSPACE}/pydyad
          python3 -m pip install -e .
          cd ${GITHUB_WORKSPACE}
      - name: Install Test
        run: |
          . ${SPACK_DIR}/share/spack/setup-env.sh
          export LD_LIBRARY_PATH=${DYAD_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}
          export CFLAGS="-I${DYAD_INSTALL_PREFIX}/include"
          export CXXFLAGS="-I${DYAD_INSTALL_PREFIX}/include"
          export LDFLAGS="-L${DYAD_INSTALL_PREFIX}/lib"
          cd ${GITHUB_WORKSPACE}/docs/demos/ecp_feb_2023
          make all
      - name: Test DYAD with DLIO benchmark
        run: |
          mkdir -p $DYAD_PATH
          . ${SPACK_DIR}/share/spack/setup-env.sh
          export PATH=${PATH}:${DYAD_INSTALL_PREFIX}/bin:${DYAD_INSTALL_PREFIX}/sbin
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${DYAD_INSTALL_PREFIX}/lib
          export PYTHONPATH=${GITHUB_WORKSPACE}/tests/integration/dlio_benchmark:${GITHUB_WORKSPACE}/pydyad:$PYTHONPATH
          python3 -m pip install -r ${GITHUB_WORKSPACE}/tests/integration/dlio_benchmark/requirements.txt
          echo "Starting flux brokers"
          cd ${GITHUB_WORKSPACE}/tests/integration/dlio_benchmark
          flux start --test-size=2 /bin/bash ./script.sh ${GITHUB_WORKSPACE} ${DYAD_INSTALL_PREFIX}
      - name: Test DYAD with separate FS c
        run: |
          mkdir -p $DYAD_PATH
          . ${SPACK_DIR}/share/spack/setup-env.sh
          export PATH=${PATH}:${DYAD_INSTALL_PREFIX}/bin:${DYAD_INSTALL_PREFIX}/sbin
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${DYAD_INSTALL_PREFIX}/lib
          echo "Starting flux brokers"
          flux start --test-size=2 /bin/bash ${GITHUB_WORKSPACE}/.github/prod-cons/dyad_prod_cons_test.sh "c"
      - name: Test DYAD with separate FS cpp
        run: |
          mkdir -p $DYAD_PATH
          . ${SPACK_DIR}/share/spack/setup-env.sh
          export PATH=${PATH}:${DYAD_INSTALL_PREFIX}/bin:${DYAD_INSTALL_PREFIX}/sbin
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${DYAD_INSTALL_PREFIX}/lib
          echo "Starting flux brokers"
          flux start --test-size=2 /bin/bash ${GITHUB_WORKSPACE}/.github/prod-cons/dyad_prod_cons_test.sh "cpp"
      - name: Test DYAD with separate FS python
        run: |
          mkdir -p $DYAD_PATH
          . ${SPACK_DIR}/share/spack/setup-env.sh
          export PATH=${PATH}:${DYAD_INSTALL_PREFIX}/bin:${DYAD_INSTALL_PREFIX}/sbin
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${DYAD_INSTALL_PREFIX}/lib
          echo "Starting flux brokers"
          flux start --test-size=2 /bin/bash ${GITHUB_WORKSPACE}/.github/prod-cons/dyad_prod_cons_test.sh "python"
      
