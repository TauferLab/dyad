set(DYAD_C_SRC ${CMAKE_CURRENT_SOURCE_DIR}/dyad_c.c)
set(DYAD_C_PRIVATE_HEADERS)
set(DYAD_C_PUBLIC_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/../../../include/dyad/c_api/dyad_c.h)

add_library(${PROJECT_NAME}_c SHARED ${DYAD_C_SRC} ${DYAD_C_PRIVATE_HEADERS} ${DYAD_C_PUBLIC_HEADERS})
set_target_properties(${PROJECT_NAME}_c PROPERTIES CMAKE_INSTALL_RPATH
                      "${CMAKE_INSTALL_PREFIX}/${DYAD_LIBDIR}")
target_link_libraries(${PROJECT_NAME}_c PRIVATE ${PROJECT_NAME}_core flux::core ${PROJECT_NAME}_utils)
target_compile_definitions(${PROJECT_NAME}_c PUBLIC BUILDING_DYAD=1)
target_compile_definitions(${PROJECT_NAME}_c PUBLIC DYAD_HAS_CONFIG)
target_include_directories(${PROJECT_NAME}_c PUBLIC
    $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/src>
    $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/include>
    $<INSTALL_INTERFACE:${DYAD_INSTALL_INCLUDE_DIR}>)
target_include_directories(${PROJECT_NAME}_c SYSTEM PRIVATE ${FluxCore_INCLUDE_DIRS})

if (TARGET DYAD_CXX_FLAGS_werror)
    target_link_libraries(${PROJECT_NAME}_c PRIVATE DYAD_CXX_FLAGS_werror)
endif ()
if(DYAD_PROFILER STREQUAL "DLIO_PROFILER")
    target_link_libraries(${PROJECT_NAME}_c PRIVATE ${DLIO_PROFILER_LIBRARIES})
endif()
if(DYAD_PROFILER STREQUAL "CALIPER")
    target_link_libraries(${PROJECT_NAME}_c PRIVATE caliper)
endif()

install(
        TARGETS ${PROJECT_NAME}_c
        EXPORT ${DYAD_EXPORTED_TARGETS}
        LIBRARY DESTINATION ${DYAD_INSTALL_LIB_DIR}
        ARCHIVE DESTINATION ${DYAD_INSTALL_LIB_DIR}
        RUNTIME DESTINATION ${DYAD_INSTALL_BIN_DIR}
)
if(NOT "${DYAD_C_PUBLIC_HEADERS}" STREQUAL "")
    dyad_install_headers("${DYAD_C_PUBLIC_HEADERS}" ${CMAKE_CURRENT_SOURCE_DIR})
endif()
